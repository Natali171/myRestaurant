@function image($file) {
  @return url($imagesPath + $file);
}

@function font($file) {
  @return url($fontsPath + $file);
}

@function userfile($file) {
  @return url($usersFilesPath + $file);
}

@function asset($type, $file) {
  @if $type == image {
    @return url($imagesPath + $file);
  } @else if $type == font {
    @return url($fontsPath + $file);
  } @else if $type == userfile {
    @return url($usersFilesPath + $file);
  }
}

@function em($target, $current: $baseFontSize) {
  @return ($target / $current) * 1em;
}

@function rem($target) {
  @return ($target / $baseFontSize) * 1rem;
}

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &_#{$modifier} {
    @content;
  }
}

@mixin mq($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin noselect() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin font($f, $s, $w: "") {
  font: #{$w} $s $f;
}

@mixin setCssVar($cssProp, $val) {
  $prefix: if(variable-exists(prefix), #{$prefix}, "");
  --#{$prefix}#{$cssProp}: #{$val};
}

@mixin getCssVar($cssProp, $cssVar: $cssProp) {
  $prefix: if(variable-exists(prefix), #{$prefix}, "");
  #{$cssProp}: var(--#{$prefix}#{$cssVar});
}

@mixin before($img, $w, $h) {
  &::before {
    content: "";
    background: url(#{$i}#{$img}) no-repeat;
    display: block;
    position: absolute;
    width: #{$w};
    height: #{$h};
    @content;
  }
}

%title {
  color: $white;
  font-family: $secondaryFontFamily;
  font-weight: 400;
  font-size: rem(35px);
  margin: 30px auto;
  max-width: 450px;
}

%divider {
  padding-top: 16px;
  max-width: 100px;
}
%subtitle {
  color: $mainColor;
  font-size: 12px;
  font-family: $baseFontFamily;
  font-weight: 700;
  letter-spacing: 4px;
  text-transform: uppercase;
}
%button {
  border: 2px solid $mainColor;
  background: transparent;
  color: $mainColor;
  display: inline-block;
  font-size: rem(12px);
  font-weight: 700;
  letter-spacing: 3px;
  margin: 0 auto;
  padding: 14px 18px;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
}

@keyframes separator {
  50% {
    transform: rotate(360deg);
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes scale-img {
  0% {
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes display {
  0% {
    opacity: 0;
    transform: scale(0.6) rotate(10deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0);
  }
}

@keyframes hide {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(100px);
    opacity: 0;
  }
}

@keyframes moveTop {
  0% {
    transform: translateY(100px);
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

@keyframes moveBgEls {
  0% {
    background-position: 40% 10%;
  }
  50% {
    background-position: 50% 100%;
  }
  100% {
    background-position: 40% 10%;
  }
}
